Logical operators in Java are used to perform logical operations on boolean values. They are essential for constructing complex conditions in control statements like if, while, and for loops. Here are the logical operators available in Java, along with examples for each:

1. Logical AND (&&)
The logical AND operator returns true if both operands are true; otherwise, it returns false.

Example:

public class LogicalOperators {
    public static void main(String[] args) {
        boolean a = true;
        boolean b = false;
        boolean c = true;

        System.out.println(a && b); // Output: false
        System.out.println(a && c); // Output: true
    }
}
2. Logical OR (||)
The logical OR operator returns true if at least one of the operands is true; otherwise, it returns false.

Example:

public class LogicalOperators {
    public static void main(String[] args) {
        boolean a = true;
        boolean b = false;
        boolean c = true;

        System.out.println(a || b); // Output: true
        System.out.println(b || b); // Output: false
    }
}
3. Logical NOT (!)
The logical NOT operator inverts the value of a boolean operand. If the operand is true, it returns false; if it is false, it returns true.

Example:

public class LogicalOperators {
    public static void main(String[] args) {
        boolean a = true;
        boolean b = false;

        System.out.println(!a); // Output: false
        System.out.println(!b); // Output: true
    }
}
4. Logical XOR (^)
The logical XOR (exclusive OR) operator returns true if exactly one of the operands is true; otherwise, it returns false.

Example:

public class LogicalOperators {
    public static void main(String[] args) {
        boolean a = true;
        boolean b = false;
        boolean c = true;

        System.out.println(a ^ b); // Output: true
        System.out.println(a ^ c); // Output: false
    }
}
Example with Conditional Statements
Logical operators are often used in conditional statements to combine multiple conditions.

Example:

public class LogicalOperators {
    public static void main(String[] args) {
        int age = 25;
        boolean isStudent = true;

        // Using AND (&&) operator
        if (age > 18 && isStudent) {
            System.out.println("Eligible for student discount.");
        } else {
            System.out.println("Not eligible for student discount.");
        }

        // Using OR (||) operator
        if (age < 18 || age > 60) {
            System.out.println("Eligible for special discount.");
        } else {
            System.out.println("Not eligible for special discount.");
        }

        // Using NOT (!) operator
        boolean isMember = false;
        if (!isMember) {
            System.out.println("Please sign up to become a member.");
        }
    }
}
Summary
Logical AND (&&): Returns true if both operands are true.
Logical OR (||): Returns true if at least one operand is true.
Logical NOT (!): Inverts the boolean value of its operand.
Logical XOR (^): Returns true if exactly one of the operands is true.
Logical operators are fundamental for constructing complex boolean expressions and controlling the flow of programs in Java.





